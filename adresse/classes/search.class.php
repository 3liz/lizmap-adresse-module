<?php
/**
* @package   lizmap
* @subpackage adresse
* @author    Pierre DRILLIN
* @copyright 2020 3liz
* @link      http://3liz.com
* @license    Mozilla Public Licence
*/

class search {

  protected $sql = array(
    'idvoie'=>'SELECT id_voie, nom_complet, type_num FROM( SELECT id_voie, type_num, nom_complet, ST_Distance(ST_geomfromtext($1, $2),geom) as dist
          FROM adresse.voie
          WHERE statut_voie_num IS FALSE ORDER BY dist LIMIT 1) AS d;',
    'classique' => 'SELECT * FROM adresse.calcul_num_adr(ST_geomfromtext($1,$2))',
    'metrique' => 'SELECT * FROM adresse.calcul_num_metrique(ST_geomfromtext($1,$2))',
    'bal' => 'SELECT cle_interop, uid_adresse, voie_nom, numero, suffixe, commune_nom, position,x, y, long, lat, source, date_derniere_maj FROM adresse.export_bal WHERE code_insee = $1',
    'version'=> 'SELECT me_version FROM adresse.metadata',
    'voie_delib'=>'SELECT v.nom_complet FROM adresse.voie v, adresse.appartenir_com a, adresse.commune c WHERE c.id_com = a.id_com AND v.id_voie = a.id_voie AND c.insee_code = $1::text AND v.delib = true',
    'commune'=> 'SELECT c.commune_nom as cnom, c.insee_code as cinsee, COUNT(v.id_voie) as nbid FROM adresse.commune c, adresse.voie v WHERE c.insee_code = $1::text AND ST_intersects(c.geom, v.geom) AND v.delib = true group by c.commune_nom, c.insee_code'
  );

  protected function getSql($option) {
      if(isset($this->sql[$option])){
        return $this->sql[$option];
      }
      return Null;
    }

  function query( $sql, $filterParams, $profile='adresse' ) {
      $cnx = jDb::getConnection( $profile );
      $resultset = $cnx->prepare( $sql );

      $resultset->execute( $filterParams );
      return $resultset;
  }

  /**
  * Get PDF generated by QGIS Server Cadastre plugin
  * @param project Project key
  * @param repository Repository key
  * @param geom Geometry as WKT
  * @param srid Cordiante system identifier
  */

  function getData($repository, $project, $layer, $filterParams, $option) {

        $profile = adresseProfile::get($repository, $project, $layer);
        $this->repository = $repository;
        $this->project = $project;

        // Run query
        $sql = $this->getSql($option);
        if(!$sql){
            return Null;
        }
        return $this->query( $sql, $filterParams, $profile );
    }
}
?>
